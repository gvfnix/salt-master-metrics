name: Build
on:
  push:
    tags: ["v*"]
jobs:
  build_wheel:
    name: Create release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install requirements
        run: python -m pip install -r requirements.txt
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
        with:
          tag_name: release/${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Build
        id: build
        run: |
          PYPROJECT_VERSION=$(echo ${{ github.ref_name }} | sed s?'^v\([0-9]*\.[0-9]*\.[0-9]\).*?\1?')
          echo pyproject_version=${PYPROJECT_VERSION} > ${GITHUB_OUTPUT}
          sed -i s'/version = ".*"/version = "'${PYPROJECT_VERSION}'"/' pyproject.toml
          python -m build
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/salt_master_metrics-${{ steps.build.outputs.pyproject_version }}-py2.py3-none-any.whl
          asset_name: salt_master_metrics-${{ steps.build.outputs.pyproject_version }}-py2.py3-none-any.whl
          asset_content_type: application/zip

      